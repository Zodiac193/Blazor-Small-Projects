@page "/category/create"
@page "/category/edit/{Id:int}"

@inject ICategoryRepository _categoryRepository
@inject NavigationManager _navManager

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Category</h3>

    <div class="col-10">
        @if (IsLoading)
        {
            <div class="text-center">
                <img src="images/loading.gif">
            </div>
        }
        else
        {
        <EditForm Model="Category" OnValidSubmit="UpsertCategory">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <!--Name Input-->
                <label>Name</label>
                <InputText @bind-Value="Category.Name" class="form-control"></InputText>
                <ValidationMessage For="()=>Category.Name" />
            </div>
            <div class="form-group py-2">
                <!--Create Button-->
                <button class="btn btn-primary">Create</button>
                <!--Back To List Button-->
                <NavLink href="category" class="btn btn-secondary">Back to List</NavLink>
            </div>
        </EditForm>
        }
    </div>
</div>





@code {
    [Parameter]
    public int Id { get; set; } 

    private string Title { get; set; } = "Create";

    private CategoryDTO Category = new CategoryDTO();

    private bool IsLoading { get; set; } 

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == 0)
            {
                //create
                IsLoading = false;
            }
            else
            {
                //update
                Title = "Update";
                await LoadCategory();
            }

        }

    }

    private async Task LoadCategory()
    {
        IsLoading = true;
        StateHasChanged();
        Category = await _categoryRepository.GET(Id);
        IsLoading = false;
        StateHasChanged();
    }

    private async Task UpsertCategory()
    {
        if (Category.Id==0)
        {
            //create
            await _categoryRepository.Create(Category);
        }
        else
        {
            //update
            await _categoryRepository.Update(Category);
        }
        _navManager.NavigateTo("category");
    }
}
